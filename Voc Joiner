# Made by MoziSpyU

import discord
import fade
from fade import *
from discord.ext import commands

banner = """
 ▄█    █▄   ▄██████▄   ▄████████           ▄█  ▄██████▄   ▄█  ███▄▄▄▄      ▄████████    ▄████████ 
███    ███ ███    ███ ███    ███          ███ ███    ███ ███  ███▀▀▀██▄   ███    ███   ███    ███ 
███    ███ ███    ███ ███    █▀           ███ ███    ███ ███▌ ███   ███   ███    █▀    ███    ███ 
███    ███ ███    ███ ███                 ███ ███    ███ ███▌ ███   ███  ▄███▄▄▄      ▄███▄▄▄▄██▀ 
███    ███ ███    ███ ███                 ███ ███    ███ ███▌ ███   ███ ▀▀███▀▀▀     ▀▀███▀▀▀▀▀   
███    ███ ███    ███ ███    █▄           ███ ███    ███ ███  ███   ███   ███    █▄  ▀███████████ 
███    ███ ███    ███ ███    ███          ███ ███    ███ ███  ███   ███   ███    ███   ███    ███ 
 ▀██████▀   ▀██████▀  ████████▀       █▄ ▄███  ▀██████▀  █▀    ▀█   █▀    ██████████   ███    ███ 
                                      ▀▀▀▀▀▀                                           ███    ███ 
"""

banner = fade.pinkred(banner)
print(banner)
print()

intents = discord.Intents.default()
intents.message_content = True  # Nécessaire pour lire le contenu des messages
intents.voice_states = True  # Nécessaire pour gérer les états vocaux

bot = commands.Bot(command_prefix='!', intents=intents)

@bot.event
async def on_ready():
    print(f'Bot connecté en tant que {bot.user}')

@bot.command()
async def join(ctx):
    print(f'{ctx.author} a utilisé la commande join')
    
    if ctx.author.voice:
        channel = ctx.author.voice.channel
        if ctx.voice_client is not None:
            if ctx.voice_client.channel == channel:
                await ctx.send(f'Je suis déjà connecté à {channel}.')
                return
            else:
                await ctx.voice_client.move_to(channel)
                await ctx.send(f'Je me suis déplacé vers {channel}.')
                return
        await channel.connect()
        await ctx.send(f'Je me suis connecté à {channel}.')
    else:
        await ctx.send('Vous devez être dans un canal vocal pour que je puisse vous rejoindre.')

@bot.command()
async def leave(ctx):
    if ctx.voice_client:
        await ctx.voice_client.disconnect()
        await ctx.send('Je me suis déconnecté du canal vocal.')
    else:
        await ctx.send('Je ne suis pas connecté à un canal vocal.')

# Remplace 'YOUR_BOT_TOKEN' par le token de ton bot
bot.run('YOUR_BOT_TOKEN')
